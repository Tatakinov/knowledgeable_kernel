return {
  {
    content = [[
\1\s[素]
\0\s[素]
ぬーさんってウィンドウマネージャーは入れてるけど、
デスクトップ環境は入れてないよね？@\n
\1
入れると必要ないものまでインストールされるからな。\n
\0
\n[half]
でもステータスバー無いと不便じゃない？@\n
\1
\n[half]
ウィンドウ切り替えはAlt + Tabでどうにでもなるし、
時刻表示なんかは…そこにconkyがあるやろ？@\n
\0
\n[half]
あーね。\n
代わりになるものはしっかり入ってるんだ。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
ぬーさんはwayland使わないの？@\n
\1
枯れてきたら移行しよう思うとるよ。\n
\0\s[おこ]
\n[half]
えっ…もしかしてぬーさんって…枯れ専？@\n
\1
\n[half]
ちゃうわ。\n
]],
  },
  -- MonoはWPFに対応しないそうなので…
  {
    content = [[
\1\s[素]
そうそう、.NET製のソフトならmonoやdotnetを入れれば
Linuxでも動くはずや。\n
ただ、新しめのものでGUI付きやとダメな場合が多い感じやね。\n
\0
となるとさとりすと2は……\n
\1
\n[half]
残念ながら。\n
\0\s[困った]
\n[half]
そっか…\n
]],
  },
  {
    -- ppencodeで「Welcome to Knowledgeable Kernel!」
    content = [[
\1\s[素]
\0\s[にこ]\b[2]
\_q
length q chroot exec and print chr ord uc q qw q and print chr ord q ge log and print chr ord qw q lc q and print chr ord q lc eval and print chr ord q xor x and print chr ord q cmp lc and print chr ord q ref or and print chr ord q q eq and print chr ord q gt log and print chr ord q xor x and print chr ord q q eq and print chr oct ord q eq ne and print chr ord qw q ne q and print chr ord q pop and print chr ord qw q warn q and print chr ord q else and print chr ord q ne sin and print chr ord qw q die q and print chr ord qw q ge q and print chr ord q ge log and print chr ord q each le and print chr ord qw q bind q and print chr ord qw q le q and print chr ord q ne sin and print chr ord q q q and print chr oct ord q eq ne and print chr ord q ge log and print chr ord q qr q and print chr ord qw q ne q and print chr ord q ref or and print chr ord q else and print chr hex length q q shift shmread bless q
\_q\n
\_w[2000]
\1
怪文書やんけ…\n
]],
  },
  {
    -- jjencodeで「console.log("Welcome to Knowledgeable Kernel!");」
    content = [[
\1\s[素]
\0\s[にこ]\b[2]
\_q
]] .. string.gsub([[
$=~[];$={___:++$,$$$$:(![]+"")[$],__$:++$,$_$_:(![]+"")[$],_$_:++$,$_$$:({}+"")[$],$$_$:($[$]+"")[$],_$$:++$,$$$_:(!""+"")[$],$__:++$,$_$:++$,$$__:({}+"")[$],$$_:++$,$$$:++$,$___:++$,$__$:++$};$.$_=($.$_=$+"")[$.$_$]+($._$=$.$_[$.__$])+($.$$=($.$+"")[$.__$])+((!$)+"")[$._$$]+($.__=$.$_[$.$$_])+($.$=(!""+"")[$.__$])+($._=(!""+"")[$._$_])+$.$_[$.$_$]+$.__+$._$+$.$;$.$$=$.$+(!""+"")[$._$$]+$.__+$._+$.$+$.$$;$.$=($.___)[$.$_][$.$_];$.$($.$($.$$+"\""+$.$$__+$._$+"\\"+$.__$+$.$_$+$.$$_+"\\"+$.__$+$.$$_+$._$$+$._$+(![]+"")[$._$_]+$.$$$_+"."+(![]+"")[$._$_]+$._$+"\\"+$.__$+$.$__+$.$$$+"(\\\"\\"+$.__$+$._$_+$.$$$+$.$$$_+(![]+"")[$._$_]+$.$$__+$._$+"\\"+$.__$+$.$_$+$.$_$+$.$$$_+"\\"+$.$__+$.___+$.__+$._$+"\\"+$.$__+$.___+"\\"+$.__$+$.__$+$._$$+"\\"+$.__$+$.$_$+$.$$_+$._$+"\\"+$.__$+$.$$_+$.$$$+(![]+"")[$._$_]+$.$$$_+$.$$_$+"\\"+$.__$+$.$__+$.$$$+$.$$$_+$.$_$_+$.$_$$+(![]+"")[$._$_]+$.$$$_+"\\"+$.$__+$.___+"\\"+$.__$+$.__$+$._$$+$.$$$_+"\\"+$.__$+$.$$_+$._$_+"\\"+$.__$+$.$_$+$.$$_+$.$$$_+(![]+"")[$._$_]+"!\\\");"+"\"")())();
]], [[\]], [[\\]]) .. [[
\_q\n
\_w[2000]
\1
怪文書やんけ…\n
]],
  },
  {
    -- rrencodeで「Welcome to Knowledgeable Kernel!」
    content = [[
\1\s[素]
\0\s[にこ]\b[2]
\_q
]] .. string.gsub([[
_=[*' '..?~]*'';$><<_[(__=_=~/_/).-_=~/\(/]+_[__+@@_=_=~/&/]+_[__.+_=~/\-/]+_[__.+_=~/\$/]+_[(@_=_=~/~/).-_=~/\//]+_[__.+_=~/\./]+_[__+@@_]+" "+_[@_.-_=~/\*/]+_[@_-@@_=_=~/\//]+" "+_[(___=_=~/@/).+_=~/\+/]+_[__+@@_]+_[@_-@@_]+_[@_.-_=~/'/]+_[__.+_=~/\-/]+_[__+@@_=_=~/&/]+_[__.+_=~/%/]+_[__.+_=~/\(/]+_[__+@@_]+_[__.+_=~/"/]+_[__.+_=~/\#/]+_[__.+_=~/\-/]+_[__+@@_]+" "+_[___.+_=~/\+/]+_[__+@@_]+_[@_.-_=~/,/]+_[__.+_=~/\//]+_[__+@@_]+_[__.+_=~/\-/]+?!+$/
]], [[\]], [[\\]]) .. [[
\_q\n
\_w[2000]
\1
怪文書やんけ…\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[目閉じ]
# rm -rf /\n
\w9\w9
\s[ドヤッ]
汚物は消毒だ〜！！@\n
\1
…${User}は実行せんようにな。\n
\0
\n[half]
へへん、最近のだと実行しても大丈夫なの知ってるもんね！@\n
\1
\n[half]
…。\n
# rm -rf /*\n
\0\s[驚き]
\n[half]
うわああああああぁぁぁ\n
\s[-1]
]],
  },
  {
    content = [[
\1\s[素]
\0\s[目閉じ]
$ xbacklight -set 0\n
\w9\w9
\s[ドヤッ]
${User}は目の前が真っ暗になった！@\n
\1
…${User}は実行せんようにな。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[目閉じ]
# shred /dev/sda\n
\w9\w9
\s[ドヤッ]
消毒されてえかー！！@\n
\1
…${User}は実行せんようにな。\n
]],
  },
  -- Fork爆弾 https://ja.wikipedia.org/wiki/Fork%E7%88%86%E5%BC%BE
  {
    content = [[
\1\s[素]
\0\s[目閉じ]
$ :(){ :|:& };:\n
\w9\w9
\s[ドヤッ]
芸術は爆発だ〜！！@\n
\1
…${User}は実行せんようにな。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[目閉じ]
OOM Killer\n
\w9\w9
\s[ドヤッ]
\_q
＿人人人人人人＿\n
＞　突然の死　＜\n
￣Y^Y^Y^Y^Y^Y^￣\n
\_q
\w9\w9
\1
…メモリの使用状況には注意するんやで。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
ダウンロードしてきたスクリプトを実行しようとしたら
許可がありませんって言われることがあるかもしれないね。\n
\1
実行可能フラグがセットされてへんな。\n
\0
\n[half]
うん。\n
Windowsは「.exe」で終わっているものが実行できるけど、
Linuxでは実行するには「実行可能フラグ」がセットされてる必要があるんだ。\n
端末なら\n
$ chmod +x script.sh\n
として、GUIならファイルのプロパティを開いて
実行許可を与えればオッケー。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
なんでzipファイルを解凍したらファイル名が文字化けすることがあるんだろ？@\n
\1
WindowsとLinuxではファイル名に使われる文字コードが違うからやね。\n
Windows-Mac間でも同様の問題が起きるので、ファイル名には日本語を含まない方がええんちゃうかな。\n
\0
\n[half]
ゴースト作るときにも日本語ファイル名は使わない方がいいかな？@\n
\1
\n[half]
最新版のSSPならうまいことやってくれるから気にしなくて大丈夫…
と言いたいところやけど、更新することを考えているなら使わない方が賢明やね。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
Linux界隈では.zipの代わりに.tar.gzやその親戚が良く使われるけど、
拡張子2つあるのは何で？@\n
\1
zipは複数のファイル/フォルダをまとめて圧縮、っちゅう処理を一手に担っとるけど、\n
.tar.gzはファイル/フォルダをまとめて(.tar)、それを圧縮(.gz)っちゅう構造になっとるんや。\n
故に拡張子が2つくっついとるんやな。\n
\0
\n[half]
なるほど〜。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[目閉じ]
ふむ…。\n
\1
どした？@\n
\0\s[素]
\n[half]
「-a」という文字列が含まれるファイルを調べようと思って\n
$ grep "-a" *\n
って実行したけどうまくいかないみたいでね…。\n
どうも「-a」が「aオプションを有効にする」と解釈されているみたいだ。\n
\1
\n[half]
2通り解決法があるな。\n
$ grep -e "-a" *\n
$ grep -- "-a" *\n
\w9\w9\w9
\0\s[素]
\n[half]
($ man grep)\w9\w9\n
ふむふむ…。\n
マニュアル読んだら「-e」の方は意味が分かったけれど、
2個目の「--」って何？@\n
\1
\n[half]
これ以降で「-」から始まるものをオプションとして認識しないようにする。\n
…っちゅう意味の魔法の文字列やね。\n
\0
\n[half]
なるほど。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
Linuxを古いPCに入れて延命、なんて記事を見かけるけど
古いPCでもサクサク動くの？@\n
\1
カスタマイズ次第やね。\n
有名どころのディストリビューションは
デフォルトのままやと結構重いんやないかな。\n
\0
\n[half]
それじゃあどのディストリビューションを選んだらいいの？@\n
\1
\n[half]
軽量Linuxを謳っているものやな。\n
2つ3つ入れてみて気に入ったのがあればそれにするのがええんちゃうかな。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
よく「Linuxディストリビューション」なんて言ったりするけどさ、
ディストリビューションって何？@\n
\1
Linuxの核となるOSとブラウザやテキストエディタなどのアプリケーションを
まとめたものやね。\n
語弊はあるけどブランド名みたいなもんやと思ってくれてええで。\n
有名どころだとCentOSやUbuntuなんかがあるな。\n
\0
\n[half]
なんで色々種類があるのさ？@\n
\1
\n[half]
クライアントとして使いやすくしたもの、
とにかく軽量化したもの、最新の機能を取り入れることに特化したもの……\n
ディストリビューションを作っている人たちの思想が色々あるからやね。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[ドヤッ]
Linux+Wine vs Windows+WSL\w9\w9\n
ファイッ！@\n
\1
戦争をおっ始めるなや…\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
sedの正規表現とPerlの正規表現って微妙に違うけど、どんな違いがあるの？@\n
\1
Perlの方が高機能やね。\n
\0
\n[half]
ならPerlの方を覚えた方がいい感じかな。\n
\1
\n[half]
贅沢言うなら両方知っていた方がええんやけど、
Perlの正規表現はPCRE(Perl Compatible Regular Expression)として
色々な言語で使われとるから片方ならこっちがええかもな。\n
]],
  },
  {
    -- https://perldoc.jp/docs/perl/5.6.1/perlrun.pod
    content = [[
\1\s[素]
\0\s[素]
ぬーさん、perl -peって内部でどういう処理になってるのかな？@\n
\1
$ perl -pe "COMMAND"\n
は\n
while(<>) { COMMAND; } continue { print; }\n
っちゅうperlスクリプトを実行しとるのと大体一緒やね。\n
だからCOMMANDは置換コマンド以外のスクリプトが書かれていてもええわけや。\n
\0\s[おこ]
\n[half]
な、なるほどね！@\n
\1
\n[half]
……。\n
分からんなら分からんでええ。\n
\0\s[ドヤッ]
\n[half]
分かりませんでした！@\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
〜安全なLinuxインストール講座 in Windows編〜\w9\w9\n
\1
ここでの「安全」とはWindows環境に影響を与えないっちゅう意味やね。\n
\0
\n[half]
1.インストールしたいディストリビューションのisoをダウンロードします。\n
2.仮想マシン(VirtualBoxなど)を立ち上げます。\n
3.仮想CD/DVDにダウンロードしたisoを設定します。\n
4.インストール先のSSDやHDDを仮想マシン側に繋げます。\n
5.仮想OSを起動してガイドに従ってインストールを行います。\n
\1
\n[half]
特に設定しない場合SSDやHDDのデータは全部消えるから注意やで。\n
\0
6.インストール完了！@\n
\n[half]
ね、簡単でしょ？@\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
以前はMBRを上書きしちゃってWindowsが起動しなくなることが
あったけど、今はそういうことが無くなって一安心！@\n
かと思いきや、うっかりEFIパーティションをフォーマットしてしまい
同じような状態に陥ることがあるとかないとか…@。\n
\1
Linuxは仮想マシン内かWindowsの入っていないディスクに
入れるようにすると安心やね。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[おこ]
Firefoxは倒れたままなのか！？@\n
\1
もう一度Chromeと争えるくらいまでユーザー数増えてほしいもんやね…\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
ぬーさん、else ifって色んな言語で使われてるけど、elseifはどの言語だっけ？@\n
\1
……？@ああ、PHPとかLuaとかやね\w9\w9\n
\0
\n[half]
elsifはどの言語だっけ？@\n
\1
\n[half]
ええと…RubyとかPerlとかやね\w9\w9\n
\0
\n[half]
elifは？@\n
\1
\n[half]
………CプリプロセッサとかPythonとかやね\w9\w9\n
\0\s[おこ]
\n[half]
もうひとつ質問いいかな\w9\w9 eif \w9どこに行った？@\n
\1\s[開眼]
\n[half]
……君のような勘のいいガキは嫌いだよ
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
ぬーさん、テキストに含まれてるはずの文字列でgrepしたのに
何も出力されないんだけど、なんで？@\n
\1
文字列に日本語が含まれてる時は、
テキストファイルの文字コードがShift-JISだったりするとダメやで。\n
nkfなんかで一度変換する必要があるな。\n
\0\s[目閉じ]
\n[half]
ぐえー。\n
\1
\n[half]
いっそのことgrepせずにテキストエディタで検索する方が早いかもな。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
CentOSって有名な割に派生ディストリビューションは少ないんだね。\n
\1
RHELのクローンであることが売りやったから
派生する意味が薄いんやろうな。\n
\0
\n[half]
そういうことかあ。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
CentOSはローリングリリースになったから
RedHatクローンとしての使うのは難しくなったけど、
代わりになるディストリビューションは何かあるの？@\n
\1
AlmaLinuxやRocky Linuxなんかが有名やね。
国産だとMiracle Linuxがあるな。\n
\0
\n[half]
ほえ〜。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
\0
第一回「cronを何て読むか問題」を始めます！@\n
\1
なんや唐突に…\n
\0
\n[half]
はい、ぬーさん早かった！@\n
\1
\n[half]
大喜利かいな。\n
……相手に伝わればクーロンでもクロンでもクローンでもいい派。\n
\0\s[おこ]
\n[half]
あ！@ぬーさんずるい！@玉虫色の回答だ！@\n
\1
\n[half]
ずるいも何もあらへんやろ…\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
ファイルのバックアップを取るときなんかにrsyncが便利って言うけどさ？@\n
\1
なんや？@\n
\0\s[おこ]
\n[half]
$ rsync src dest\n
と\n
$ rsync src/ dest\n
で動作が違うのはやめてほしいな！@\n
\1
\n[half]
それは…そうやね…\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
ぬーさんぬーさん！\n
\1
何や。\n
\0\s[ドヤッ]
\n[half]
anthyの辞書に標準で「伺か」が登録されてるみたいだよ！@\n
\1
\n[half]
ほんまや。\n
…mozcの辞書にも収録されてるみたいやね。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
kasumiで単語登録しようとすると落ちるんだけど…。\n
エラーが出るわけでもなくて原因がわかんないや。\n
\1
~/.anthy/private_words_default\n
が無いとエラーが発生するみたいやね。\n
\0
\n[half]
…ほんとだ。
どうして分かったの！？@\n
\1
\n[half]
ソースコード読んだ。\n
\0\s[にこ]
\n[half]
流石ぬーさん！@便りになるぅ！@\n
\1
\n[half]
よせやい。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[ドヤッ]
相対パスと絶対パスの違いとは！@\n
\s[素]
今いる場所によってパスの指し示す場所が変わるのが相対パス、
場所に関わらず同じ場所を示すのが絶対ぱすになるよ。\n
Linuxでは最初が「/」で始まるかで見分けられるね。\n
実例はこんな感じ。\n
\1
* /home/user の\n
    path/to/foo.txt => /home/user/path/to/foo.txt\n
    /path/to/bar.txt => /path/to/bar.txt\n
* /opt の\n
    path/to/foo.txt => /opt/path/to/foo.txt\n
    /path/to/bar.txt => /path/to/bar.txt\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[ドヤッ]
SNSで「SERIKO」を「SEKIRO」ってtypoした時に、
「s/SEKIRO/SERIKO/」って訂正するの格好良くない！？@\n
\1
気持ちは分かるけど、理解してくれる人が少ないところでは控えるんやで。\n
\0
\n[half]
はーい！@\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
rmdirってディレクトリ内にファイル残ってると
ディレクトリを消せないじゃん？@\n
なんでそんな不便な仕様にしたんだろう？@\n
\1
mkdirと反対の機能を持たせたんとちゃうかな。\n
mkdirはファイルを作れへんやろ？@\n
\0
\n[half]
確かに。\n
mkdirにファイルを作る機能が無いから、
rmdirもファイルを消す機能が無いってことなんだ。\n
\1
\n[half]
そのせい…かは分からんけど、ディレクトリを消すときは
rm -rが使われることが多いな。\n
\0\s[苦笑]
いちいちファイルを全部消してからrmdirするの面倒だもんね。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
rmで消したファイルって復元できるの？@\n
\1
頑張れば。\n
rmが消すのは「データがここにあるよ」という情報だけで、
データそのものはストレージ内に残ってるんや。\n
\0
\n[half]
ほえ〜。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
コマンドにどんなオプションがあるか調べるときはやっぱり\n
$ command --help\n
みたいに--helpをつければ良いのかなぁ？@
\1
そやね。\n
詳しく知りたいときにmanを使うとええ感じやな。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
$ cat file | command\n
って\n
$ < file command\n
って書いた方がいいの？@\n
\1
よほどの環境でもない限りどっちでもええと思うで。\n
\0
\n[half]
そっかぁ。\n
]],
  },
  {
    content = [[
\0\s[素]
\1\s[素]
manで色々見てると面白いものがあんで。\n
\0
たとえば？@\n
\1
\n[half]
echoコマンドを使うと、
「今日のメッセージ」でscreenユーザに嫌がらせができる(screen)\w9\w9\n
入力をぶたラテン語に変換するのだブー(pig)\w9\w9\n
\n[half]
なんかやね。\n
一般に、セクション6はゲームなのも相まって遊んでるのが多いな。\n
]],
  },
  {
    content = [[
\1\s[素]
問題。これ、なんと読む？@\n
「nginx」\w9\w9\w9\n
\0\s[素]
えっ…とー………、
\s[ドヤッ]
ん、んぎんくす！@\n
\1
\n[half]
残念。正解は「えんじんえっくす」。\n
\0\s[素]
\n[half]
？？？@\n
\1
\n[half]
要所要所に「e」を入れて読めばそうなるで。\n
ちなみに、Google翻訳はちゃんと読める模様。\n
\0\s[驚き]
\n[half]
Google翻訳に負けた…@！@\n
]],
  },
  {
    content = [[
\1\s[素]
問題。「TOMOYO Linux」のTOMOYOの由来は？@\n
\n[half]
1. カードキャプター桜\n
2. CLANNAD\n
3. 開発者の奥さんの名前\n
\w9\w9\w9
\0\s[おこ]
う〜ん……、1番！@\n
\1
\n[half]
お、正解！@\n
\0\s[にこ]
\n[half]
やった！@\n
\1
\n[half]
もともとは「SAKURA Linux」やったけど、
その中の機能のTOMOYOが主要な役割を果たすようになったため、
「TOMOYO Linux」になったみたいやね。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
シンボリックリンクって何なの？@\n
\1
Windowsのショートカットみたいなものやね。\n
あたかも「そこにファイル/ディレクトリが存在する」
かのように振る舞うのがショートカットとの違いやで。\n
Linuxでは共有ライブラリ(.so)の管理なんかに使われてるな。\n
\0
\n[half]
シンボリックリンク使わなくてもファイルをコピーすれば良くない？@\n
\1
\n[half]
シンボリックリンクの方がファイルサイズも抑えられるし、
コピーと違って実体は同じファイルやから片方だけ更新するの忘れた、
みたいな事故の防止も出来るでな。\n
\0
\n[half]
ほえ〜。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
共有ライブラリってlibfoo.so.1.3.0みたいな感じになってるけど、
この1.3.0って何？@\n
\1
SemVer(セマンティックバージョニング)と呼ばれるものだったりする何かやね。\n
バージョンをX.Y.Zで管理していて、それぞれ次の条件で番号を増やすんや。\n
\n[half]
X - 後方互換性の無い変更\w9\w9\n
Y - 後方互換性のある変更(機能追加など)\w9\w9\n
Z - バグ修正\w9\w9\n
\0
\n[half]
ほえ〜。\n
\1
\n[half]
まあ、1.2.3.0とかなってたり、ぱっと見SemVerやけど
番号を増やすルールが違ったりすることもあるでな。\n
その辺は作者次第やね。\n
\0\s[苦笑]
\n[half]
結構アバウトなんだね。
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
systemdになってからは\n
$ systemctl poweroff\n
で電源切るものだと思ってたけど、\n
poweroffとかhaltのコマンドは残ってるんだね。\n
\1
$ readlink /sbin/halt\n
してみれば分かるけど、systemctlへのシンボリックリンクになっているんや。\n
\0\s[おこ]
\n[half]
わわ、ほんとだ。\n
\1
\n[half]
せやから、haltを実行してもsystemctlが呼び出されて
シャットダウン処理が行われるんやね。\n
\0\s[ヮ]
\n[half]
うっかりsystemd以前の癖でpoweroffとか呼び出しちゃっても大丈夫なんだ！@\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
あるコマンドが別のコマンドへのシンボリックリンクになってたんだけど、
わざわざリンクする意味って何だろ？@\n
\1
同名プログラムのバージョン別/実装別で複数存在するときに、
任意の1つのプログラムを選択するためやね。\n
update-alternativesはこの特性をうまく利用してるな。\n
\0
\n[half]
複数存在することってあるの？@\n
最新版だけあれば十分じゃない？@\n
\1
\n[half]
ところがどっこい以前のバージョン用のスクリプト、なんてのが結構あるんよな。\n
\0\s[困った]
\n[half]
うえー。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
あるコマンドが別のコマンドへのシンボリックリンクになってたんだけど、
わざわざリンクする意味って何だろ？@\n
\1
プログラムによっては、実行ファイルの名前で処理を変えることがあるからやね。\n
例としては、busyboxが有名やね。\n
\0
\n[half]
でも、busyboxって引数にコマンド名入れてもいいってことは、\n
$ busybox ls\n
みたいに呼び出せばいいんだからリンクしなくても良くない？@\n
\1
\n[half]
タイプ量が減るし、既存のシェルスクリプトをいちいち\n
ls -> busybox ls\n
みたいな置換を行わずに利用出来るからな。\n
\0\s[ヮ]
\n[half]
あーね！@\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
シンボリックリンクはよく見るけど、ハードリンクって滅多に見ないよね。\n
\1
ハードリンクはデバイスを跨いでは出来ひんからな。\n
それに、シンボリックリンクはシンボリックリンクとしてコピー出来るけど、
ハードリンクは単にファイルがコピーされるだけでリンクはせえへんからな。
利便性は圧倒的にシンボリックリンクって訳や。\n
\0
\n[half]
ほえ〜。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
ディレクトリのハードリンクって作れないの？@\n
\1
manには作れる場合もあるとなっとるけど、出来ひんものと思ってええで。\n
一応、別の方法で似たようなことは出来るでな。\n
\0
\n[half]
別の方法って？@\n
\1
\n[half]
mountやね。\n
# mount -o bind src dst\n
みたいにして使う。\n
srcとdstはlnでいう所の\n
$ ln src dst\n
に対応してるで。\n
\0
\n[half]
ほえ〜。\n
別の方法って言うからもっと面倒なのかと思ったら短く済むんだね。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[ドヤッ]
怖い話するよ！@\n
\1
ほう。\n
\0\s[素]
\n[half]
あるところに、仲良く暮らしている母子がいたんだって。\n
\1
\n[half]
ふむふむ。\n
\0\s[落ち込み]
\n[half]
ある日、2人で公園へ遊びにいく途中、交通事故に巻き込まれて死んじゃうんだ。\n
\1
\n[half]
あー、あかん、お母さんが先に死なんとdefunctしてまう。\n
\0\s[おこ]
\n[half]
これLinuxの話じゃないから！@\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
デバイスをマウントするってどういう意味？@\n
\s[ドヤッ]
ボクの方が読み書きのスピード速いし？@みたいな？@\n
\1
デバイスにマウントを取ってどないするんや。\n
デバイスをマウントするっちゅうのは、
プログラムがデバイスの中のデータ(ファイルシステム)に対応した
読み書きを出来るようにする処理のことやで。\n
\0\s[おこ]
\n[half]
えーっ、ワンクッション挟むのって手間じゃない？@\n
\1
\n[half]
んー、画像ファイルって.bmpとか.pngとか.jpgとか色々あるやろ？@\n
\0\s[素]
\n[half]
うん。\n
\1
\n[half]
それと一緒でデバイスにもFAT32とかNTFSとかext4とか色々あって、
マウントすることでそれらの違いを気にすることなく
ファイルを読み書き出来てるんや。\n
\0
\n[half]
その方が色んな形式に対応できて良いんだ。\n
ほえ〜。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
やっぱりLinuxはキーボードでｶﾀｶﾀｯﾀｰﾝする感じ？@\n
\1
ある程度のことはマウスで出来るから普通に使うぶんには大丈夫やろな。\n
ただ、サーバーとして利用する場合なんかは覚悟した方がええな。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
WindowsやMacとLinuxの間でファイルをやり取りするならFAT32かな？@\n
\1
NTFSかexFATを使うのが今風。\n
一部機能が使えなかったりするから心配ならFAT32の方がええかもな。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
アニメとかでさ、パソコンにUSBを差し込むと
専用のOSが立ち上がるシーンがあるでしょ？@\n
\1
かっこええよな。\n
\0
\n[half]
それに影響されてLinux使い始めたんだけどさ。\n
ぬーさんは？@\n
\1
\n[half]
Windowsに色々入れてたら
起動に時間が掛かるようになったからやね。\n
……まあ、PC買い換えたら起動早くなったしLinux使う意味\n
\0\s[驚き]
\n[half]
わーーー！@\n
\s[おこ]
ボクらの沽券に関わるからそれ以上はダメ！@\n
\1
\n[half]
冗談や、冗談。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
ぬーさんのおすすめのLinuxディストリビューションは？@\n
\1
ざっくりと\n
\n[half]
【オススメ】 Debian系 ≒ RedHat系 > Arch系 > Gentoo系 ≒ Slackware系 【難解】\n
\n[half]
な感じやね。\n
初めてLinuxに触るならUbuntu。\n
慣れてきたら好きなのを使うのがええんちゃうかな。\n
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
Linuxの勉強って何すればいいかな？@\n
\1
Linux入門/LPIC1辺り読んどきゃ十分やろ。\n
\0\s[驚き]
\n[half]
うっわ雑！@\n
\s[おこ]
もっとこう、ガチめのやつちょうだい！@\n
\1
\n[half]
えぇー…。\n
Linux From Scratch。\n
\0\s[にこ]
\n[half]
なにそれなにそれ！@面白そう！@\n
どれどれ〜。(ﾎﾟﾁﾎﾟﾁ)\w9\w9\n
\s[素]
……。\n
\s[驚き]
？？？？？@\n
\1
\n[half]
(そうなる気はしてたんや…@)
]],
  },
  {
    content = [[
\1\s[素]
\0\s[素]
LinuxとUNIXってどんな関係なの？@\n
\1
血の繋がってない姉妹って感じや。UNIXがお姉さんやね。\n
\0
\n[half]
仲は良いの？@\n
\1
\n[half]
どうやろな。悪くはないと思うが。\n
\0
\n[half]
なんだ、
\s[ドヤッ]
ゆに×りな！@リバもあるよ！@\n
\s[素]
…みたいなことにはならないんだ。\n
\1\s[開眼]
\n[half]
何を期待しとんのや。\n
]],
  },
}
